var documenterSearchIndex = {"docs":
[{"location":"index.html#Welcome-to-Rump","page":"Welcome to Rump","title":"Welcome to Rump","text":"","category":"section"},{"location":"index.html","page":"Welcome to Rump","title":"Welcome to Rump","text":"Rump is ...","category":"page"},{"location":"index.html#L-algebras","page":"Welcome to Rump","title":"L-algebras","text":"","category":"section"},{"location":"index.html","page":"Welcome to Rump","title":"Welcome to Rump","text":"check_LAlgebra\nLAlgebra\nLAlgebraElem\nprint(x::LAlgebraElem)\n*(x::LAlgebraElem, y::LAlgebraElem)\n*(S::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, T::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}})\n*(S::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}},x::LAlgebraElem)\nin(x::LAlgebraElem, a::LAlgebra)\nsize(a::LAlgebra)\nlength(a::LAlgebra)\nlogical_unit\nrand_elem\nelements\nupset\ndownset\nis_sharp\nis_symmetric\nis_abelian\nis_linear\nis_discrete\nis_semiregular\nis_regular\nis_hilbert\nis_dualBCK\nis_KL\nis_CL\nis_prime_element\nprime_elements\nis_prime\nis_subLalgebra\nis_invariant\nis_ideal\nsubLalgebra_generated_by\nideal_generated_by","category":"page"},{"location":"index.html#Rump.check_LAlgebra","page":"Welcome to Rump","title":"Rump.check_LAlgebra","text":"check_LAlgebra(M::Matrix)\n\nCheck if the matrix M is a multiplication table of an L-algebra.\n\nExamples\n\njulia> check_LAlgebra([2 2; 1 2])\ntrue\n\njulia> check_LAlgebra([1 2; 1 2])\nfalse\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.LAlgebra","page":"Welcome to Rump","title":"Rump.LAlgebra","text":"LAlgebra(M::Matrix)\nLAlgebra(M::Matrix ; check::Bool = false)\n\nThe L-algebra with elements {1,…,n} and multiplication table given by M, i.e. i*j = M[i,j].\n\nCheck has a default value false.  Set check = true to check_LAlgebra(M) before constructing the L-algebra.\n\nSee also check_LAlgebra, LAlgebraElem.\n\nExamples\n\njulia> LAlgebra([2 2; 1 2])\nLAlgebra([2 2; 1 2])\n\njulia> LAlgebra([2 2; 1 2], check=true)\nLAlgebra([2 2; 1 2])\n\njulia> LAlgebra([1 1; 1 2], check=true)\nERROR: [1 1; 1 2] does not define an L-algebra\n[...]\n\n\n\n\n\n","category":"type"},{"location":"index.html#Rump.LAlgebraElem","page":"Welcome to Rump","title":"Rump.LAlgebraElem","text":"LAlgebraElem(M::Matrix, value::Int)\nLAlgebra(M::Matrix ; check::Bool = false)\n\nThe element number value in the L-algebra defined by the matrix M. See also LAlgebra.\n\nExamples\n\njulia> a = LAlgebra([2 2; 1 2]);\njulia> LAlgebraElem(A, 2)\nLAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\n\n\n\n\n","category":"type"},{"location":"index.html#Base.print-Tuple{LAlgebraElem}","page":"Welcome to Rump","title":"Base.print","text":"print(x::LAlgebraElem)\n\nWhen applied to L-algebra elements,  prints (using println) the  value of x.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.:*-Tuple{LAlgebraElem, LAlgebraElem}","page":"Welcome to Rump","title":"Base.:*","text":"*(x::LAlgebraElem, y::LAlgebraElem)\n\nWhen applied to L-algebra elements of the same L-algebra, multiplies them in the L-algebra.\n\nExamples\n\njulia> a = LAlgebra([2 2; 1 2]);\njulia> b = LAlgebra([3 1 3; 3 3 3; 1 2 3]);\n\njulia> LAlgebraElem(a,2)*LAlgebraElem(b,2);\nERROR: elements not in the same LAlgebra\n\njulia> LAlgebraElem(a,2)*LAlgebraElem(a,1)\nLAlgebraElem(LAlgebra([2 2; 1 2]), 1)\n\njulia> LAlgebraElem(a,1)*LAlgebraElem(a,1)*LAlgebraElem(a,1)\nLAlgebraElem(LAlgebra([2 2; 1 2]), 1)\n\njulia> LAlgebraElem(a,1)*(LAlgebraElem(a,1)*LAlgebraElem(a,1))\nLAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.:*-Tuple{Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}}","page":"Welcome to Rump","title":"Base.:*","text":"*(S::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}},x::LAlgebraElem)\n\nReturn the set of products {s*t:s∈S,t∈T}.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.:*-Tuple{Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, LAlgebraElem}","page":"Welcome to Rump","title":"Base.:*","text":"*(S::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}},x::LAlgebraElem)\n\nReturn the set of products {s*x∣s∈S}.\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.in-Tuple{LAlgebraElem, LAlgebra}","page":"Welcome to Rump","title":"Base.in","text":"in(x::LAlgebraElem, a::LAlgebra)\n\nDetermine wether x is an element of a in the sense that x.algebra==a\n\njulia> A = LAlgebra([2 2; 1 2]);\njulia> B = LAlgebra([3 1 3; 1 3 3; 1 2 3]);\njulia> LAlgebraElem(A,2) in A\ntrue\n\njulia> LAlgebraElem(B,2) in A\nfalse\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.size-Tuple{LAlgebra}","page":"Welcome to Rump","title":"Base.size","text":"size(a::LAlgebra)\n\nWhen applied to an L-algebra returns its cardinality.\n\nExamples\n\njulia> A = LAlgebra([2 2; 1 2]);\njulia> size(A)\n2\n\n\n\n\n\n","category":"method"},{"location":"index.html#Base.length-Tuple{LAlgebra}","page":"Welcome to Rump","title":"Base.length","text":"length(a::LAlgebra)\n\nWhen applied to an L-algebra returns its cardinality.\n\nExamples\n\njulia> A = LAlgebra([2 2; 1 2]);\njulia> length(A)\n2\n\n\n\n\n\n","category":"method"},{"location":"index.html#Rump.logical_unit","page":"Welcome to Rump","title":"Rump.logical_unit","text":"logical_unit(a::LAlgebra))\n\nReturn the logical unit of the L-algebra a, i.e. the element u in a such that xx=xu=1 and 1*x=x for all x in a.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.rand_elem","page":"Welcome to Rump","title":"Rump.rand_elem","text":"rand_elem(a::LAlgebra)\n\nReturn a random element of a.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.elements","page":"Welcome to Rump","title":"Rump.elements","text":"elements(a::LAlgebra)\n\nReturn a vector with of all the elements of a.\n\nExamples\n\njulia> a = LAlgebra([2 2; 1 2]);\njulia> elements(a)\n2-element Vector{LAlgebraElem}:\n LAlgebraElem(LAlgebra([2 2; 1 2]), 1)\n LAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.upset","page":"Welcome to Rump","title":"Rump.upset","text":"upset(x::LAlgebraElem)\n\nGiven an element x of an L-algebra A, return a vector with of all the elements in A that are bigger than x.\n\nExamples\n\njulia> a = LAlgebra([2 2; 1 2]);\njulia> upset(a)\n1-element Vector{LAlgebraElem}:\n LAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.downset","page":"Welcome to Rump","title":"Rump.downset","text":"downset(x::LAlgebraElem)\n\nGiven an element x of an L-algebra A, return a vector with of all the elements in A that are bigger than x.\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> downset(x) 2-element Vector{LAlgebraElem}:  LAlgebraElem(LAlgebra([2 2; 1 2]), 1)  LAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_sharp","page":"Welcome to Rump","title":"Rump.is_sharp","text":"is_sharp(a::LAlgebra)\n\nCheck if A is a sharp L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_sharp(A) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_symmetric","page":"Welcome to Rump","title":"Rump.is_symmetric","text":"is_symmetric(a::LAlgebra)\n\nCheck if A is a symmetric L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_symmetric(A) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_abelian","page":"Welcome to Rump","title":"Rump.is_abelian","text":"is_abelian(a::LAlgebra)\n\nCheck if A is an abelian L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_abelian(A) false\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_linear","page":"Welcome to Rump","title":"Rump.is_linear","text":"is_linear(a::LAlgebra)\n\nCheck if A is a linear L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_linear(A) false\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_discrete","page":"Welcome to Rump","title":"Rump.is_discrete","text":"is_discrete(a::LAlgebra)\n\nCheck if A is a discrete L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_discrete(A) false\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_semiregular","page":"Welcome to Rump","title":"Rump.is_semiregular","text":"is_semiregular(a::LAlgebra)\n\nCheck if A is a semiregular L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_semiregular(A) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_regular","page":"Welcome to Rump","title":"Rump.is_regular","text":"is_regular(a::LAlgebra)\n\nCheck if A is a regular L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_regular(A) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_hilbert","page":"Welcome to Rump","title":"Rump.is_hilbert","text":"is_hilbert(a::LAlgebra)\n\nCheck if A is a hilbert L-algebra\n\nExamples\n\njulia-repl julia> A = LAlgebra([2 2; 1 2]); julia> is_hilbert(A) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_dualBCK","page":"Welcome to Rump","title":"Rump.is_dualBCK","text":"is_dualBCK(a::LAlgebra)\n\nCheck if A is a dualBCK-algebra\n\nExamples\n\njulia-repl julia> A = Lalgebra([2 2; 1 2]); julia> is_dualBCK(a) false\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_KL","page":"Welcome to Rump","title":"Rump.is_KL","text":"is_KL(a::LAlgebra)\n\nCheck if a is a KL-algebra\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> is_KL(a) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_CL","page":"Welcome to Rump","title":"Rump.is_CL","text":"is_CL(a::LAlgebra)\n\nCheck if a is a KL-algebra\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> is_CL(a) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_prime_element","page":"Welcome to Rump","title":"Rump.is_prime_element","text":"is_prime_element(p::LAlgebraElem)\n\nCheck if p is a prime element of the L-algebra.\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> p = LAlgebraElem(A,1) true julia> n = LAlgebraElem(A,2) false\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.prime_elements","page":"Welcome to Rump","title":"Rump.prime_elements","text":"prime_elements(a::LAlgebra)\n\nReturn a vector with all the prime elements of a \n\nExamples\n\n```julia-repl julia> a = LAlgebra([2 2; 1 2]); julia> prime_elements(a) 1-element Vector{LAlgebraElem}:  LAlgebraElem(LAlgebra([2 2; 1 2]), 1)\n\njulia> b = LAlgebra([3 1 3; 3 3 3; 1 2 3]); julia> prime_elements(b) 1-element Vector{LAlgebraElem}:  LAlgebraElem(LAlgebra([3 1 3; 3 3 3; 1 2 3]), 1)  ```\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_prime","page":"Welcome to Rump","title":"Rump.is_prime","text":"is_prime(a::LAlgebra)\n\nCheck if a is a prime L-algebra\n\nExamples\n\n```julia-repl julia> a = LAlgebra([2 2; 1 2]); julia> is_prime(a) true\n\njulia> b = LAlgebra([3 1 3; 3 3 3; 1 2 3]); julia> is_prime(b) false  ```\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_subLalgebra","page":"Welcome to Rump","title":"Rump.is_subLalgebra","text":"is_subLalgebra(s::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, a::LAlgebra)\n\nCheck if s (either a subset or a vector of eleemtns of a),      is a L-subalgebra of a.\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> is_subLalgebra([LAlgebraElem(a,1)],a) false julia> is_subLalgebra([LAlgebraElem(a,2)],a) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_invariant","page":"Welcome to Rump","title":"Rump.is_invariant","text":"is_invariant(s::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, a::LAlgebra)\n\nCheck if s (either a subset or a vector of eleemtns of a),      is closed under the operation of a.\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> is_invariant([LAlgebraElem(a,1)],a) false julia> is_invariant([LAlgebraElem(a,2)],a) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.is_ideal","page":"Welcome to Rump","title":"Rump.is_ideal","text":"is_ideal(s::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, a::LAlgebra)\n\nCheck if s (either a subset or a vector of eleemtns of a),      is an ideal of a.\n\nExamples\n\njulia-repl julia> a = LAlgebra([2 2; 1 2]); julia> is_ideal([LAlgebraElem(a,1)],a) false julia> is_ideal([LAlgebraElem(a,2)],a) true\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.subLalgebra_generated_by","page":"Welcome to Rump","title":"Rump.subLalgebra_generated_by","text":"subLalgebra_generated_by(s::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, a::LAlgebra)\n\nReturn the L-subalgebra of a generated by the subset (or the elements in the vector) s.\n\nExamples\n\n```julia-repl julia> a = LAlgebra([2 2; 1 2]); julia> subLalgebrageneratedby([LAlgebraElem(a,1)],a) Set{LAlgebraElem} with 2 elements:   LAlgebraElem(LAlgebra([2 2; 1 2]), 1)   LAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\njulia> subLalgebrageneratedby([LAlgebraElem(a,2)],a) Set{LAlgebraElem} with 1 element:   LAlgebraElem(LAlgebra([2 2; 1 2]), 2)  ```\n\n\n\n\n\n","category":"function"},{"location":"index.html#Rump.ideal_generated_by","page":"Welcome to Rump","title":"Rump.ideal_generated_by","text":"ideal_generated_by(s::Union{Set{LAlgebraElem}, Vector{LAlgebraElem}}, a::LAlgebra)\n\nReturn the L-subalgebra of a generated by the subset (or the elements in the vector) s.\n\nExamples\n\n```julia-repl julia> a = LAlgebra([2 2; 1 2]); julia> idealgeneratedby([LAlgebraElem(a,1)],a) Set{LAlgebraElem} with 2 elements:   LAlgebraElem(LAlgebra([2 2; 1 2]), 1)   LAlgebraElem(LAlgebra([2 2; 1 2]), 2)\n\njulia> idealgeneratedby([LAlgebraElem(a,2)],a) Set{LAlgebraElem} with 1 element:   LAlgebraElem(LAlgebra([2 2; 1 2]), 2)  ```\n\n\n\n\n\n","category":"function"}]
}
